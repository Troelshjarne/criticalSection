syntax = "proto3";

package criticalpackage;
option go_package = "https://github.com/Troelshjarne/criticalSection;criticalpackage";


/* node sends request for entering the critical section.
   the node attach its lamport time and node id.
*/ 
message request {
    int64 nodeId = 1;
    int64 val = 2;
 }
 

 /*
  a node sends a reply - accepting the request
 */
 message reply {
    bool access =  1;
 }

 /*
 acknowledge for sending a request  
 */
message ack {
  string status = 1;
}


//May need change to "serverReply" according to how we are going to implement the communication

service Communication{

   //UPDATE: This has now been changed to a single RPC call (with no streaming), that is simply called
   //with an ID and have a boolean returned.
   rpc serverReply(request) returns (stream reply) {}
   rpc sendRequest (stream request) returns (ack) {}
}